name: Flutter CI/CD

on:
  push:
    branches:
      - main
      - dev
      - release
  pull_request:
    branches:
      - main
      - dev
      - release

jobs:
  build:
    name: Build and Test Flutter App
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # Checkout code with full history
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up Java (matching your local Java version)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17.0.11'
          cache: 'gradle'

      # Set up Flutter SDK
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'

      # Verify Flutter and Dart versions
      - name: Verify Flutter installation
        run: |
          flutter doctor -v
          flutter --version
          dart --version

      # Clean and get dependencies
      - name: Clean and get dependencies
        run: |
          flutter clean
          flutter pub get

      # Run code analysis
      - name: Analyze code
        run: dart analyze

      # Run tests 
      - name: Run tests
        run: flutter test

      # Build for multiple platforms
      - name: Build release APK
        run: |
          flutter build apk --release --split-per-abi
          flutter build web
          flutter build windows

      # Upload artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cross-platform-builds
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/web/**/*
            build/windows/x64/runner/Release/**/*
          retention-days: 5

      # Prepare artifacts for main branch
      - name: Prepare Release Artifacts
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Preparing artifacts for main branch deployment"
          # Additional release preparation steps
          mkdir -p release
          cp build/app/outputs/flutter-apk/*.apk release/
          cp -r build/web release/web
          cp -r build/windows/x64/runner/Release release/windows